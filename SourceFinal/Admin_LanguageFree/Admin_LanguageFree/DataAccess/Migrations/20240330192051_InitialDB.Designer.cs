// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20240330192051_InitialDB")]
    partial class InitialDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BusinessObject.Model.AccessLogs", b =>
                {
                    b.Property<int>("AccessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AccessId");

                    b.ToTable("AccessLog");
                });

            modelBuilder.Entity("BusinessObject.Model.Accounts", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isVerify")
                        .HasColumnType("bit");

                    b.HasKey("AccountId");

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            AccountId = 1,
                            Password = "838fe7f16147b11480b17f9fcc345414b5e5706c427263a86538b65f3a4c2a64",
                            RoleId = "3",
                            Status = 1,
                            Timestamp = new DateTime(2024, 3, 31, 2, 20, 51, 353, DateTimeKind.Local).AddTicks(1808),
                            UserId = 1,
                            Username = "huyntce160121@fpt.edu.vn",
                            isVerify = false
                        });
                });

            modelBuilder.Entity("BusinessObject.Model.Comments", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommentText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("BusinessObject.Model.LanguageLogs", b =>
                {
                    b.Property<int>("LangLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("FromOrTo")
                        .HasColumnType("bit");

                    b.Property<string>("LanguageTarget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LangLogId");

                    b.ToTable("LanguageLog");
                });

            modelBuilder.Entity("BusinessObject.Model.Pages", b =>
                {
                    b.Property<int>("PageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PageName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PageId");

                    b.ToTable("Page");

                    b.HasData(
                        new
                        {
                            PageId = 1,
                            PageName = "Intro Screen"
                        },
                        new
                        {
                            PageId = 2,
                            PageName = "Login SDT"
                        },
                        new
                        {
                            PageId = 3,
                            PageName = "Login Gmail"
                        },
                        new
                        {
                            PageId = 4,
                            PageName = "Home"
                        },
                        new
                        {
                            PageId = 5,
                            PageName = "Translate Text"
                        },
                        new
                        {
                            PageId = 6,
                            PageName = "Translate Speech"
                        },
                        new
                        {
                            PageId = 7,
                            PageName = "Translate Image"
                        },
                        new
                        {
                            PageId = 8,
                            PageName = "News"
                        },
                        new
                        {
                            PageId = 9,
                            PageName = "Weather"
                        },
                        new
                        {
                            PageId = 10,
                            PageName = "Weather Detail"
                        },
                        new
                        {
                            PageId = 11,
                            PageName = "Profile"
                        },
                        new
                        {
                            PageId = 12,
                            PageName = "Welcome"
                        },
                        new
                        {
                            PageId = 13,
                            PageName = "About Us"
                        },
                        new
                        {
                            PageId = 14,
                            PageName = "Chat Bot"
                        },
                        new
                        {
                            PageId = 15,
                            PageName = "Help"
                        },
                        new
                        {
                            PageId = 16,
                            PageName = "QR Scan"
                        },
                        new
                        {
                            PageId = 17,
                            PageName = "User Guide"
                        },
                        new
                        {
                            PageId = 18,
                            PageName = "Favourite"
                        });
                });

            modelBuilder.Entity("BusinessObject.Model.Rates", b =>
                {
                    b.Property<int>("RateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RateNum")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RateId");

                    b.ToTable("Rate");
                });

            modelBuilder.Entity("BusinessObject.Model.Roles", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "User"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 3,
                            RoleName = "ParentAdmin"
                        });
                });

            modelBuilder.Entity("BusinessObject.Model.Settings", b =>
                {
                    b.Property<int>("SettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConversationLanguageFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConversationLanguageTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureLangTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslationLanguageFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslationLanguageTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UiLanguagePreference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SettingId");

                    b.ToTable("Setting");
                });

            modelBuilder.Entity("BusinessObject.Model.TranslationHistorys", b =>
                {
                    b.Property<int>("TranslationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageId")
                        .HasColumnType("int");

                    b.Property<string>("SourceLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TranslatedText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TranslationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TranslationId");

                    b.ToTable("TranslationHistory");
                });

            modelBuilder.Entity("BusinessObject.Model.Users", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("National")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            DateOfBirth = new DateTime(2004, 4, 10, 2, 20, 51, 353, DateTimeKind.Local).AddTicks(7497),
                            Email = "huyntce160121@fpt.edu.vn",
                            FullName = "Thanh Huy Admin",
                            Gender = "Male",
                            ImageUser = "1.png",
                            National = "Vietnamese",
                            Phone = "12345671",
                            Timestamp = new DateTime(2024, 3, 31, 2, 20, 51, 353, DateTimeKind.Local).AddTicks(7791)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
